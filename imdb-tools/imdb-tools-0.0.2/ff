#!/usr/bin/env bash

if (( $# < 2 ))
then
  echo need at least two arguments >&2
  exit 1
fi

out="$1"

if [ -f "$out" ]
then
  echo output file already exists >&2
  exit 2
fi

command=""
all_files_found=1
at_least_one_input=0
at_least_one_language=0
shift
for a in "$@"
do
  if [[ $a =~ ^([0-9]+):([0-9]+)$ ]]
  then
    if (( at_least_one_input == 0))
    then
      echo encountered stream mapping without input file >&2
      exit 4
    fi
    command+=" -map ${BASH_REMATCH[1]}:${BASH_REMATCH[2]}"
    continue
  fi
  if  [[ $a =~ ^s:([as]):([0-9]+):([a-z]+)$ ]]
  then
    command+=" -metadata:s:${BASH_REMATCH[1]}:${BASH_REMATCH[2]} language=${BASH_REMATCH[3]}"
    at_least_one_language=1
    continue
  fi
  command+=" -i \"$a\""
  at_least_one_input=1
  if [ ! -f "$a" ]
  then
    echo -e file \"$a\" not found >&2
    all_files_found=0
  fi
  shift
done

if (( all_files_found == 0 ))
then
  exit 3
fi
command+=" -hide_banner -c copy -c:s mov_text -map_metadata -1 -movflags faststart "
if (( at_least_one_language == 0 ))
then
  command+=" -metadata:s:a:0 language=eng -metadata:s:s:0 language=eng"
fi
command+=" \"$out\""
echo
echo ffmpeg "$command"
echo
eval ffmpeg "$command" 2>&1 | grep "Stream #"
